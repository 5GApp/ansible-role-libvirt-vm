<domain type='{{ libvirt_vm_engine }}'>
  <name>{{ vm.name }}</name>
  <memory>{{ vm.memory_mb | int * 1024 }}</memory>
  <vcpu>{{ vm.vcpus }}</vcpu>
  <clock offset="localtime"/>
  <on_poweroff>destroy</on_poweroff>
  <on_reboot>restart</on_reboot>
  <on_crash>destroy</on_crash>
  <os>
    <type arch='{{ libvirt_vm_arch }}'{% if machine is not none %} machine='{{ machine }}'{% endif %}>hvm</type>
    <bootmenu enable='no'/>
    <boot dev='hd'/>
    <boot dev='network'/>
    <bios useserial='yes'/>
  </os>
  <features>
    <acpi/>
    <apic/>
    <pae/>
  </features>
  {% if cpu_mode %}
  <cpu mode='{{ cpu_mode }}'>
    <model fallback='allow'/>
  </cpu>
  {% endif %}
  <devices>
    <emulator>{{ libvirt_vm_emulator }}</emulator>
{% for volume in volumes %}
    <disk type='volume' device='{{ volume.device | default(libvirt_volume_default_device) }}'>
      <driver name='qemu' type='{{ volume.format | default(libvirt_volume_default_format) }}'/>
      <source pool='{{ volume.pool }}' volume='{{ volume.name }}'/>
      <target dev='vd{{ 'abcdefghijklmnopqrstuvwxyz'[loop.index - 1] }}'/>
    </disk>
{% endfor %}
{% for interface in interfaces %}
{% if interface.type is defined and interface.type == 'direct' %}
    <interface type='direct'>
      <source dev='{{ interface.source.dev }}' mode='{{ interface.source.mode | default('vepa') }}'/>
{% else %}
    <interface type='network'>
      <source network='{{ interface.network }}'/>
{% endif %}
      <model type='virtio'/>
    </interface>
{% endfor %}
{% if console_log_enabled | bool %}
    <serial type='file'>
      <source path='{{ console_log_path }}'/>
    </serial>
    <serial type='pty'/>
    <console type='file'>
      <source path='{{ console_log_path }}'/>
      <target type='serial'/>
    </console>
{% else %}
    <serial type='pty'>
      <target port='0'/>
    </serial>
    <console type='pty'>
      <target type='serial' port='0'/>
    </console>
{% endif %}
  </devices>
</domain>
